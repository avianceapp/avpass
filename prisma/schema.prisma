datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider  = "prisma-client-py"
  interface = "sync"
}

model AccessToken {
  id        String     @id @default(cuid())
  user_id   String
  token     String  @unique
  expires   DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user      User    @relation(fields: [user_id], references: [id])
}

model User {
  id        String       @id @default(cuid())
  email     String    @unique
  password  String
  username  String?
  emailVerified  Boolean  @default(true)
  admin     Boolean   @default(false)
  active    Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  is_authenticated  Boolean  @default(true)
  access_token AccessToken[]
  apiCredits String  @default("1")
}

model application {
  id          String      @id @default(cuid())
  created_on  DateTime    @default(now())
  ownerID     String
  description String      @default("Cool application")
  redirect_uri  String    @default("http://localhost:3000/callback/avpass")
  client_id   String      @default("client_idhere")
  client_secret String    @default("client_secrethere")
  name        String      @default("My Cool application")
}

model AuthCode {
  id          String      @id @default(cuid())
  client_id   String
  redirect_uri String
  user_id     String
  code        String
  expires_at  DateTime
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model registrationVerificationService {
  id        String      @id @default(cuid())
  email     String
  password  String
  username  String
  code      String
}

model resetKey {
  id        String      @id @default(cuid())
  token     String
  email     String
  expired   Boolean  @default(false)
}